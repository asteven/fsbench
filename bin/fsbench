#!/bin/sh

export __pwd=$(pwd -P)
export __mydir=${0%/*}
export __mydir_abs=$(cd "$__mydir" && pwd -P)
export __myname=${0##*/}
export __myname_abs=$__mydir_abs/$__myname
export __base_dir=$(cd "$__mydir/../" && pwd -P)

usage() {
   cat << EOS 1>&2
Usage: $__myname [OPTIONS] [benchcase-1 benchcase-n]

Run filesystem benchmarks.

Where benchcases can be any or all of:
$(ls -x "$__base_dir/benchcases")

If no benchcase is given, all of them are run in order.

Options:
    -h|--help              show this help message
    -d|--debug             debug: set -x
    -b|--benchmark string  which benchmark script to run
                              one of: $(ls -x "$__base_dir/benchmarks")
    -p|--profile string    which profile to use for preparing the benchmark run
                              one of: $(ls -x "$__base_dir/profiles")
    -o|--output string     output directory for benchmark results
                              defaults to $__base_dir/output
EOS
}

die() {
   echo "$@" >&2
   exit 1
}

debug() {
   [ "$debug" ] && echo "$@" >&2
}

# Parse command line arguments
while [ $# -gt 0 ]; do
   case "$1" in
      -d|--debug)
         debug=1
         shift
      ;;
      -h|--help)
         usage
         exit 0
      ;;
      -p|--profile)
         profile=$2
         shift 2
      ;;
      -b|--benchmark)
         benchmark=$2
         shift 2
      ;;
      -o|--output)
         output=$2
         shift 2
      ;;
   esac
done

[ $debug ] && set -x

# All remaining arguments are benchcases
benchcases=$@
[ -n "$benchcases" ] || benchcases=$(find "$__base_dir/benchcases" -mindepth 1 -maxdepth 1 -type d ! -name "\.*" -printf "%f\n")

: ${output:=$__base_dir/output}

# Exit if anything goes wrong
set -e

fstab_backup=$(mktemp)
cp /etc/fstab "$fstab_backup"
trap restore_fstab EXIT 
restore_fstab() {
   cp "$fstab_backup" /etc/fstab
}

exit
profile_dir=$__base_dir/profiles/$profile
[ -x "$profile_dir/setup" ] && "$profile_dir/setup" || true

export device=$(cat "$profile_dir/device")
export mount_point=$(cat "$profile_dir/mount_point")

output_dir=$output/$profile
[ -d "$output_dir" ] || mkdir -p "$output_dir"

benchmark_script=$__base_dir/benchmarks/$benchmark
[ -e "$benchmark_script" ] || die "$benchmark_script does not exist"
[ -x "$benchmark_script" ] || die "$benchmark_script is not executable"

umount "$mount_point" || true

for benchcase in $benchcases; do
   echo "benchcase: $benchcase"
   export benchcase

   benchcase_dir=$__base_dir/benchcases/$benchcase

   # setup
   [ -x "$benchcase_dir/setup" ] && "$benchcase_dir/setup" || true
   # add fstab entry
   export mount_options=$(cat "$benchcase_dir/mount_options")
   fstab_entry="$device $mount_point $mount_options 0 0 # fsbench"
   echo "$fstab_entry" >> /etc/fstab
   # mount
   mount "$mount_point"
   # run benchmark
   suffix=`date +%Y%m%dT%H%M%S`
   export output_file=$output_dir/$benchmark.$benchcase.$suffix
   $benchmark_script > "$output_file"
   # umount
   umount "$mount_point"
   # remove fstab entry
   restore_fstab
   # teardown
   [ -x "$benchcase_dir/teardown" ] && "$benchcase_dir/teardown" || true
done

[ -x "$profile_dir/teardown" ] && "$profile_dir/teardown" || true

